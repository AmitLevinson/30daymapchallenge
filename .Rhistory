from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving")) %>%
unnest(drive_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = 1), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
View(info_address)
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address))
View(info_route)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving")) %>%
unnest(drive_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = 1), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = route), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
mapview::mapview(info_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = route), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = route), data = info_route)+
theme_void()
View(info_route)
?route
library(osrm)
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ osrm::route(from = .x, to = .y),mode= "driving")) %>%
unnest(drive_route)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ osrm::route(from = .x, to = .y),mode= "driving")) %>%
unnest(drive_route)
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ osrm::route(from = .x, to = .y))) %>%
unnest(drive_route)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ osrm::route(from = .x, to = .y))) %>%
unnest(drive_route)
?osrm::route
??osrm::route
?stplanr::route()
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ stplanr::route(from = .x, to = .y))) %>%
unnest(drive_route)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ stplanr::route(from = .x, to = .y))) %>%
unnest(drive_route)
# Get addresses for lat and long locations
info_address <- info_joined %>%
mutate(address = map2_chr(info_joined$stop_lon, info_joined$stop_lat, ~revgeocode(c(.x, .y),  output = "address")))
View(info_address)
info_address <- info_address %>%
mutate(
address = ifelse(stop_code == 10986, "Hatzvi 149, Be'er Sheva, Israel", address)
)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving")) %>%
unnest(drive_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = route), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving", alternatives = TRUE)) %>%
unnest(drive_route)
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving", alternatives = TRUE)) %>%
unnest(drive_route)
# Now get routes from the points
info_route <- info_address %>%
mutate(
from_add = address,
# Create a corresponding to address
to_add = lead(address),
# Colelct relevant routes
drive_route = map2(from_add,to_add, ~ route(from = .x, to = .y),mode= "driving", alternatives = TRUE)) %>%
unnest(drive_route)
View(info_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, group = route), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
View(info_route)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
mapview::mapview(info_route)
info_route2 <- readRDS("movement/20_bus-routes.rds")
View(info_route2)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route2)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
library(readr)
library(dplyr)
library(purrr)
library(ggmap)
library(tidyr)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 13, scale = 2, maptype = "roadmap")
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Ben-gurion Blvd, Beer-Sheva"
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = test)
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Ben-gurion Blvd, Beer-Sheva",
mode = "driving"
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = test)
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Ben-gurion Blvd, Beer-Sheva",
mode = "walking"
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = test)
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Ben-gurion Blvd, Beer-Sheva",
mode = "driving",
alternatives = TRUE
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = test)
View(test)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Sapir 25, Rehovot, IL",
mode = "driving",
alternatives = TRUE
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 10, scale = 2, maptype = "roadmap")
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Sapir 25, Rehovot, IL",
mode = "driving",
alternatives = TRUE
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 13, scale = 2, maptype = "roadmap")
test <- route(
from = "Main bus station, Beer-Sheva, IL",
to = "Shimon st., 6, Beer-Sheva, IL",
mode = "driving",
alternatives = TRUE
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
test <- route(
from = "Ben-Gurion airport, Israel",
to = "Ben-Gurion University of the negev, Beer Sheva, IL",
mode = "driving",
alternatives = TRUE
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 4, scale = 2, maptype = "roadmap")
test <- route(
from = "Ben-Gurion airport, Israel",
to = "Ben-Gurion University of the negev, Beer Sheva, IL",
mode = "driving"
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 8, scale = 2, maptype = "roadmap")
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route, size = 2)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test, size = 2)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 9, scale = 2, maptype = "roadmap")
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test, size = 2)
test <- route(
from = "Ben-Gurion airport, Israel",
to = "Ben-Gurion University of the negev, Beer Sheva, IL",
mode = "driving"
)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test, size = 2)
View(test)
# Get beer-Sheva's map
b7_map <- get_googlemap(center = c(34.791462 , 31.252973),zoom = 13, scale = 2, maptype = "roadmap")
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat, color = route), data = test, size = 2)
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
ggmap(b7_map)+
geom_leg(aes(x = start_lon, xend = end_lon, y = start_lat, yend = end_lat), data = info_route)+
geom_point(data = info_route, aes(x = stop_lon, y= stop_lat))+
theme_void()
library(pwr)
install.packages("pwr")
library(pwr)
library(ggplot2)
p_data <- expand.grid(
d = seq(0, 1.2, length.out = 20),
n = seq(2, 150, length.out = 50)
)
p_data$power <- pwr.t.test(
n = p_data$n, d = p_data$d,
sig.level = .05, type = "two.sample"
)$power # get only the power values
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
scale_fill_distiller("Power", type = "seq", palette = 3, direction = 1) +
scale_linetype_discrete("Power", guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
scale_fill_distiller("Power", type = "seq", palette = 3, direction = 1) +
scale_linetype_discrete("Power", guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
theme(
guides(guide_legend(override.aes = list(linetype = c(0, 1),
shape = c(16, NA),
color = "black"))
))
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
scale_fill_distiller("Power", type = "seq", palette = 3, direction = 1) +
scale_linetype_discrete("Power", guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
theme(
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1),
shape = c(16, NA),
color = "black"))
))
?guides
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
scale_fill_distiller("Power", type = "seq", palette = 3, direction = 1) +
scale_linetype_discrete("Power", guide = guide_legend(reverse = TRUE)) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1),
shape = c(16, NA),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1), shape = c(16, NA),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3), shape = c(16, NA),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3), shape = c(16, NA,1,2),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3), shape = c(16, NA,1,1),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3), shape = c(16, 1,1,1),
color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3),color = "black"))
)
?guide_legend
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3),color = "black", reverse = TRUE))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(guide = guide_legend(override.aes = list(linetype = c(0, 1,2,3),color = "black"))
)
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(fill = guide_legend("Power", type = "seq", palette = 3, direction = 1),
lintype = guide_legend("Power", guide = guide_legend(reverse = TRUE)))
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(fill = guide_legend("Power", type = "seq", palette = 3, direction = 1),
lintype = guide_legend("Power", guide = guide_legend(reverse = TRUE)))+
patchwork::plot_layout(guides = "collect")
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(fill = guide_legend("Power", type = "seq", palette = 3, direction = 1),
lintype = guide_legend("Power", guide = guide_legend(reverse = TRUE)))+
patchwork::plot_layout(guides = "collect")& theme(legend.position = 'bottom')
ggplot(p_data, aes(n, d, fill = power)) +
geom_raster() +
geom_contour(aes(z = power, linetype = factor(stat(level))),
breaks = c(0.5, 0.8, 0.9, 0.99),
color = "black", size = 1) +
theme_minimal() +
labs(x = "Sample Size [per group]",
y = "Cohen's d",
title = "Power Curve Analysis",
subtitle = "for an independent samples t-test")+
guides(fill = guide_legend("Power", type = "seq", palette = 3, direction = 1),
lintype = guide_legend("Power", guide = guide_legend(reverse = TRUE)))+
patchwork::plot_layout(guides = "collect")
list.files(pattern = ".shp$")
list.files(pattern = ".shp$", recursive = TRUE)
library(sf)
f <- read_sf("ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½/ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ (Arc View)/ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½.shp")
plot(f)
f <- read_sf("×’×‘×•×œ×•×ª ×©×™×¤×•×˜/ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ï¿½ - ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½/ï¿½ï¿½ï¿½ï¿½ï¿½ ï¿½ï¿½ï¿½ï¿½ (Arc View)/muni_il.shp")
plot(f)
